@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  font-size: 2rem;
}
body.overflow-hidden {
  overflow: hidden;
}

.contenedor {
  width: 95%;
  max-width: 120rem;
  margin: 0 auto;
}

h1, h2, h3 {
  margin: 0 0 5rem 0;
  font-weight: 900;
}

h1 {
  font-size: 4rem;
}

h2 {
  font-size: 4.6rem;
}

h3 {
  font-size: 6rem;
  text-align: center;
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
  width: 100%;
  height: auto;
  display: block;
}

/* > dice que le aplique a los hijos*/
body > section {
  padding: 10rem 0;
}

.header {
  background-color: #000000;
}
@media (min-width: 768px) {
  .header.fixed {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    box-shadow: 0.1rem 0.2rem 0.3rem #333;
  }
}
.header .contenido-header {
  padding: 2rem;
}
@media (min-width: 768px) {
  .header .contenido-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}
.header h1 {
  color: #f23f80;
  text-align: center;
}
@media (min-width: 768px) {
  .header h1 {
    margin: 0;
    text-align: left;
  }
}

.navegacion-principal {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
}
@media (min-width: 768px) {
  .navegacion-principal {
    flex-direction: row;
  }
}
.navegacion-principal a {
  color: #f23f80;
  font-size: 2.4rem;
}
.navegacion-principal a:hover, .navegacion-principal a.active {
  color: #ffffff;
}

.video {
  position: relative;
  min-height: 10rem;
  max-width: 200rem;
  overflow: hidden;
}
.video .overlay {
  position: absolute;
  background: linear-gradient(270deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.7));
  inset: 0;
  display: flex;
  align-items: center;
}
.video video {
  display: block;
  width: auto;
}
@media (min-width: 1200px) {
  .video video {
    width: 100%;
  }
}

.contenido-video {
  z-index: 10; /* Cuando queda atras de otro */
}
.contenido-video h2 {
  color: #ffffff;
  font-size: 7rem;
  margin: 0;
}
.contenido-video p {
  display: inline-block;
  background-color: #f23f80;
  padding: 1rem 2rem;
  font-size: 2.4rem;
  font-weight: 700;
  margin: 0;
  color: #ffffff;
}

.sobre-festival {
  width: 95%;
  max-width: 120rem;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .sobre-festival {
    /* Mixin Parametrado*/
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 5rem;
  }
}

.contenido-festival {
  margin-top: 5rem;
}
.contenido-festival h2 {
  margin-bottom: 2rem;
}
.contenido-festival .fecha {
  color: #be33ff;
  font-weight: 700;
}

.lineup {
  background-color: #111111;
}
.lineup h3, .lineup .dia {
  text-align: center;
  color: #ffffff;
}
.lineup .dia {
  font-size: 3rem;
  text-transform: uppercase;
}

.escenarios-contenedor {
  width: 95%;
  max-width: 120rem;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .escenarios-contenedor {
    /* Mixin Parametrado*/
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 5rem;
  }
}

.escenario {
  padding-top: 2rem;
}
.escenario .nombre-escenario {
  font-size: 3rem;
  font-weight: 900;
  text-transform: uppercase;
  text-align: center;
}

.calendario {
  margin: 0;
  padding: 0;
  list-style: none;
}
.calendario li {
  padding: 2.5rem;
  font-weight: 700;
}
.calendario span {
  font-weight: 400;
}

.bg-rosa1 {
  background-color: #ff94e0;
}
.bg-rosa1 li:nth-child(odd) {
  background-color: rgb(255, 173.5, 231.3878504673);
}

.bg-rosa2 {
  background-color: #ff59c7;
}
.bg-rosa2 li:nth-child(odd) {
  background-color: rgb(255, 114.5, 207.6024096386);
}

.contenedor-boletos {
  background-color: #000000;
}
.contenedor-boletos h3 {
  color: #ffffff;
}
.contenedor-boletos .boletos {
  width: 95%;
  max-width: 120rem;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .contenedor-boletos .boletos {
    /* Mixin Parametrado*/
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 5rem;
  }
}

.pase {
  transition: transform 0.3s ease-in-out;
}
.pase:hover {
  transform: scale(1.1);
}
.pase-nombre {
  font-size: 3.6rem;
  font-weight: 900;
  text-align: center;
  color: #ffffff;
}
.pase-header, .pase-footer {
  padding: 0.5rem;
}
.pase-header p, .pase-footer p {
  text-align: center;
  color: #ffffff;
  margin: 0;
}
.pase-header {
  background-color: #f23f80;
}
.pase-header p {
  text-transform: uppercase;
  font-size: 2.2rem;
  padding: 1rem 0;
}
.pase-body {
  background-color: #ffffff;
}
.pase-body ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.pase-body ul li {
  padding: 2rem;
  border-bottom: 1px solid #e1e1e1;
}
.pase-footer {
  background-color: #ffffff;
  padding: 3rem;
}
.pase-footer p {
  font-size: 2.8rem;
  font-weight: 900;
  background-color: #e17992;
  padding: 1rem 0;
  border-radius: 1rem;
  cursor: pointer;
}
.pase-footer p:hover {
  background-color: rgb(199.3658536585, 44.6341463415, 81.8292682927);
}

.footer {
  background-color: #f23f80;
  text-align: center;
  padding: 2rem 0;
}
.footer p {
  font-size: 3rem;
  font-weight: 700;
  margin: 0; /*Todos los p tienen margen*/
  color: #ffffff;
}

.galeria {
  width: 95%;
  max-width: 120rem;
  margin: 0 auto;
}
.galeria-imagenes {
  /* Mixin Parametrado*/
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 2rem;
  /* cuando son imagenes de tamaño diferente usamos*/
  /*

      img{

              height: 20rem;
              object-fit: cover

      }

  */
}
@media (min-width: 480px) {
  .galeria-imagenes {
    /* Mixin Parametrado*/
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}
@media (min-width: 768px) {
  .galeria-imagenes {
    /* Mixin Parametrado*/
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }
}
@media (min-width: 1200px) {
  .galeria-imagenes {
    /* Mixin Parametrado*/
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 2rem;
  }
}

.modal {
  position: fixed; /* Fijamos el elemento */
  inset: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: grid;
  place-items: center;
  animation: fadeIn ease-in 0.5s;
}
.modal.fadeOut {
  animation: fadeOut ease-out 0.5s;
}
.modal img {
  max-width: 100rem;
}

.btn-cerrar {
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  background-color: #f23f80;
  border: none;
  color: #ffffff;
  display: grid;
  place-items: center;
  font-weight: 700;
  cursor: pointer;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
